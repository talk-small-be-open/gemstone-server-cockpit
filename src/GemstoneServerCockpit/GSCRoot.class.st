Class {
	#name : #GSCRoot,
	#superclass : #GSCTool,
	#instVars : [
		'config'
	],
	#category : #'GemstoneServerCockpit-Model'
}

{ #category : #'as yet unclassified' }
GSCRoot >> autogeneratedAppIndexFor: anApplicationTool [

	^ self configAt: ('appIndexes:', anApplicationTool shortCode) default: [
		| presentValues highest |
		presentValues := (self configAt: 'appIndexes') ifNil: [ {  } ] ifNotNil: [ :dict | dict values ].
		highest := presentValues ifEmpty: [ 0 ] ifNotEmpty: [ :all | all max ].
		
		(highest + 1) asInteger
	]
]

{ #category : #building }
GSCRoot >> build [
	self add: GSCConfigurationEditor then: [ :editor |
		editor
			title: 'Root config';
			config: config.
	].

]

{ #category : #accessing }
GSCRoot >> config [

	^ config
]

{ #category : #accessing }
GSCRoot >> config: anObject [

	config := anObject
]

{ #category : #accessing }
GSCRoot >> doAddApplication [
	| schemeClass scheme conf |

	"TODO: Let choose version"
	schemeClass := GSCWebApplicationSchemeV1.

	"TODO: Name it."

	scheme := schemeClass new.
	conf := GSCConfiguration fromFile: ('/etc/gsc/applications/new.conf').
"	conf at: 'project:shortCode' put: 'NewWebApp'.
	conf at: 'project:name' put: 'New Web Application'."

	scheme config: conf.
	
	"app := "
	scheme buildApplicationToolInto: self
]

{ #category : #'as yet unclassified' }
GSCRoot >> gemstoneGsHome [
	^ ((self configAt: 'gemstone:gsHome') ifBlank: [ '/opt/GsDevKit_home' ]) asPath.
]

{ #category : #testing }
GSCRoot >> isRoot [
	^ true
]

{ #category : #accessing }
GSCRoot >> root [
	^ self
]

{ #category : #accessing }
GSCRoot >> title [
	^ 'Home'
]
