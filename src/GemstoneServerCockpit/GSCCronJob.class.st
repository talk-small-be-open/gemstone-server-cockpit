Class {
	#name : #GSCCronJob,
	#superclass : #GSCTool,
	#instVars : [
		'mailto',
		'command',
		'user',
		'minute',
		'hour',
		'weekday',
		'title'
	],
	#category : #'GemstoneServerCockpit-Model'
}

{ #category : #configuring }
GSCCronJob >> beRoot [
	user := 'root'
]

{ #category : #building }
GSCCronJob >> build [

	self add: GSCTextFile then: [ :file |
		file
"			title: ''"
			filePath: ('/etc/cron.d/', self fileName, '.cron');
			beRootOwned;
			contentTemplate: self cronJobTemplate
	].

]

{ #category : #accessing }
GSCCronJob >> command [

	^ command
]

{ #category : #accessing }
GSCCronJob >> command: anObject [

	command := anObject
]

{ #category : #'as yet unclassified' }
GSCCronJob >> cronJobTemplate [
	^ GSCSttTemplate tool: self sttString:
'# Cron job file generated by GSC
#

MAILTO=<?stt= me mailto ?>
SHELL=/bin/bash
GS_HOME=<?stt= me gemstoneGsHome pathString ?>
PATH=<?stt= me gemstoneGsHome pathString ?>/bin:/usr/bin:/bin:/usr/local/bin

# Job: <?stt= me title ?>
<?stt= me minute ?> <?stt= me hour ?> * * <?stt= me weekday ?> <?stt= me user ?> cronic <?stt= me command ?>
'
]

{ #category : #accessing }
GSCCronJob >> fileName [
	^ ( 'gsc_', (self core serverFilenameFor: self title) )
]

{ #category : #accessing }
GSCCronJob >> hour [

	^ hour
]

{ #category : #accessing }
GSCCronJob >> hour: anObject [

	hour := anObject asString
]

{ #category : #initialization }
GSCCronJob >> initMe [
	super initMe.	

	mailto ifNil: [ mailto := self serverAdminEmail ].
	user ifNil: [ user := self serverUsername ].
	
]

{ #category : #initialization }
GSCCronJob >> initialize [
	super initialize.

	"Some not too stupid default values, just in case"
	minute := '0'.
	hour := '*'.
	weekday := '*'.

]

{ #category : #accessing }
GSCCronJob >> mailto [

	^ mailto
]

{ #category : #accessing }
GSCCronJob >> mailto: anObject [

	mailto := anObject
]

{ #category : #accessing }
GSCCronJob >> minute [

	^ minute
]

{ #category : #accessing }
GSCCronJob >> minute: anObject [

	minute := anObject asString
]

{ #category : #accessing }
GSCCronJob >> title [

	^ title
]

{ #category : #accessing }
GSCCronJob >> title: anObject [

	title := anObject
]

{ #category : #accessing }
GSCCronJob >> user [

	^ user
]

{ #category : #accessing }
GSCCronJob >> user: anObject [

	user := anObject
]

{ #category : #accessing }
GSCCronJob >> weekday [

	^ weekday
]

{ #category : #accessing }
GSCCronJob >> weekday: anObject [

	weekday := anObject asString
]
